PM2016 <- read.csv("~/GitHub/tarea_aplicada_5/PM2016.csv", header=FALSE, sep=";")
View(PM2016)
#Tarea 5 Aplicada II
#Kevin García - Alejandro Vargas
PM2016 <- read.csv("~/GitHub/tarea_aplicada_5/PM2016.csv", header=FALSE, sep=";")
#Tarea 5 Aplicada II
#Kevin García - Alejandro Vargas
Base <- read.csv("~/GitHub/tarea_aplicada_5/PM2016.csv", header=FALSE, sep=";")
View(Base)
#Punto 1:
modelo1<-lm(Base$V3~Base$V2)
View(Base)
View(Base)
#Punto 1:
modelo1<-lm(Base$V3 ~ Base$V2)
U<-function(x){((-49*2)/x)+((2/x^(3))*4794902949)}
x11()
plot()
curve(U,9000,11000,10000,add=TRUE)
x11()
plot(density(U),col="White")
curve(U,9000,11000,10000,add=TRUE)
x11()
plot(U)
curve(U,9000,11000,10000,add=TRUE)
x11()
plot(U,col="White")
curve(U,9000,11000,10000,add=TRUE)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(U,9000,11000,10000,add=TRUE)
x11()
plot(U, y = 0, to = 1, from = y, xlim = NULL, ylab = NULL, ...)
n=49
l=2
U<-function(x){((-n*l)/x)+((l/x^(l+1))*4794902949)}
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(U,9000,11000,10000,add=TRUE)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(U,2000,30000,10000,add=TRUE)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(U,2000,30000,10000,add=TRUE)
abline(h=0)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(U,2000,30000,10000,add=TRUE)
abline(h=0)
abline(v=0)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(U,2000,30000,10000,add=TRUE)
abline(h=0)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(U,2000,30000,10000,add=TRUE)
abline(h=0,v=0)
x11()
plot(U,col="White",xlim=c(8000,12000))
abline(v=0)
curve(U,2000,30000,10000,add=TRUE)
abline(h=0)
x11()
plot(U,col="White",xlim=c(8000,12000))
abline(v=9892.1768)
curve(U,2000,30000,10000,add=TRUE)
abline(h=0)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(U,2000,30000,10000,add=TRUE)
abline(h=0)
abline(v=9892.1768)
J<-function(x){n*((l/x)^2)}
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(J,2000,30000,10000,add=TRUE)
curve(U,2000,30000,10000,add=TRUE)
abline(h=0)
abline(v=9892.1768)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(J,2000,30000,10000,add=TRUE)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(J,9000,11000,10000,add=TRUE)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(J,7000,13000,10000,add=TRUE)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(U,2000,30000,10000,add=TRUE)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(U,2000,30000,10000,add=TRUE)
points(x,y=0)
abline(h=0)
abline(v=9892.1768)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(U,2000,30000,10000,add=TRUE)
points(y=0)
abline(h=0)
abline(v=9892.1768)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(U,2000,30000,10000,add=TRUE)
points(x=9892.1768,y=0)
abline(h=0)
abline(v=9892.1768)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(U,2000,30000,10000,add=TRUE)
points(x=9892.1768,y=0,pch=20)
abline(h=0)
abline(v=9892.1768)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(U,2000,30000,10000,add=TRUE)
points(x=9892.1768,y=0,pch=16,col="Red")
abline(h=0)
abline(v=9892.1768)
x11()
plot(J,col="White",xlim=c(8000,12000))
curve(J,7000,13000,10000,add=TRUE)
x11()
plot(J,col="White")
curve(J,7000,13000,10000,add=TRUE)
x11()
plot(J,col="White",xlim=c(5000,15000))
curve(J,7000,13000,10000,add=TRUE)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(U,2000,30000,10000,add=TRUE)
curve(J,7000,13000,10000,add=TRUE)
points(x=9892.1768,y=0,pch=16,col="Red")
abline(h=0)
abline(v=9892.1768)
x11()
plot(J,col="White",xlim=c(5000,15000))
curve(J,7000,13000,10000,add=TRUE)
x11()
plot(J,col="White",xlim=c(6000,13000))
curve(J,7000,13000,10000,add=TRUE)
x11()
plot(J,col="White",xlim=c(6000,13000))
curve(J,7000,13000,10000,add=TRUE)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(U,2000,30000,10000,add=TRUE)
curve(J,7000,13000,10000,add=TRUE)
points(x=9892.1768,y=0,pch=16,col="Red")
abline(h=0)
abline(v=9892.1768)
x11()
plot(U,col="White",xlim=c(6000,13000))
curve(U,2000,30000,10000,add=TRUE)
curve(J,7000,13000,10000,add=TRUE)
points(x=9892.1768,y=0,pch=16,col="Red")
abline(h=0)
abline(v=9892.1768)
x11()
plot(U,col="White",xlim=c(8000,12000))
curve(U,9000,11000,10000,add=TRUE)
points(x=9892.1768,y=0,pch=16,col="Red")
abline(h=0)
abline(v=9892.1768)
x11()
plot(J,col="White",xlim=c(8000,12000))
curve(J,9000,11000,10000,add=TRUE)
library("goftest")
#función:
Fun<-function(x,n,k){
N=length(x)
medias=rep(0,k)
for (i in 1:k) {
O=order(runif(N))
medias[i]=mean(x[O[1:n]])
}
m=round(mean(medias),4)
s2=round((var(medias)*(k-1)/k*10000)/10000,4)
hist(medias,freq=FALSE,ylab="Densidad",xlab = paste("Promedios con n =",n,"datos"),
main = paste("Media =",m,"\n Varianza =",s2))
curve(exp(-((x-mean(medias))/sd(medias))^2/2)/(sd(medias)*sqrt(2*pi))
,min(medias),max(medias),add=T)
cvm.test(medias,"pnorm")
}
#Distribución Logistica:
x<-rlogis(20000,0,1)  #Parámetros 0,1
x11()
par(mfrow=c(2,2))
Fun(x,1,5000)
Fun(x,10,5000)
Fun(x,25,5000)
Fun(x,50,5000)
x2<-PM10
#Punto 1 y 2:
PM10<-Base$PM10
PM25<-Base$PM25
modelo1<-lm(PM25 ~ PM10)
PM25<-Base$PM25
modelo1<-lm(PM25 ~ PM10)
#Tarea 5 Aplicada II
#Kevin García - Alejandro Vargas
Base <- read.csv("~/GitHub/tarea_aplicada_5/PM2016.csv", sep=";", stringsAsFactors=FALSE)
#Punto 1 y 2:
PM10<-Base$PM10
PM25<-Base$PM25
modelo1<-lm(PM25 ~ PM10)
#Punto 4: Modelo por el origen:
modelo2<-lm(PM25~0+PM10)
x2<-PM10
x2
b<-t(x2)
t(x2)
y2<-PM25
b<-solve(t(x2)%*%x2)%*%t(x2)%*%y2
b
gqtest(modelo2)
#Homocedasticidad:
library('het.test')
library('vars')
require('car')
library('Rcmdr')
gqtest(modelo2)
bartlett.test(PM25 ~ PM10)
fligner.test(PM25 ~ PM10)
bptest(modelo2)
fligner.test(modelo2)
x11()
plot(PM10,PM25,ylab = "PM2.5",xlim=c(0,200),main = "Modelo ajustado")
abline(modelo1,col="Red")
abline(modelo2,col="Green")
x11()
plot(PM10,PM25,ylab = "PM2.5",xlim=c(0,200),main = "Modelo ajustado")
abline(modelo1,col="Red")
abline(modelo2,col="Green")
legend("topright",legend = c("Modelo1","Modelo2"))
x11()
plot(PM10,PM25,ylab = "PM2.5",xlim=c(0,200),main = "Modelo ajustado")
abline(modelo1,col="Red")
abline(modelo2,col="Green")
legend("topright",legend = c("Modelo1","Modelo2"),lty=c(1,1))
x11()
plot(PM10,PM25,ylab = "PM2.5",xlim=c(0,200),main = "Modelo ajustado")
abline(modelo1,col="Red")
abline(modelo2,col="Green")
legend("topleft",legend = c("Modelo1","Modelo2"),lty=c(1,1),col=c("Red","Green"))
x11()
plot(PM10,PM25,ylab = "PM2.5",xlim=c(0,200),main = "Gráfica de dispersión con rectas de regresión")
abline(modelo1,col="Red")
abline(modelo2,col="Green")
legend("topleft",legend = c("Modelo1","Modelo2"),lty=c(1,1),col=c("Red","Green"))
x11()
plot(PM10,PM25,ylab = "PM2.5",xlim=c(0,200),main = "Gráfica de dispersión con rectas de regresión")
abline(modelo1,col="Red")
abline(modelo2,col="Green")
legend("topleft",legend = c("Modelo1","Modelo2"),lty=c(1,1),col=c("Red","Green"))
AIC(modelo1)
AIC(modelo2)
BIC(modelo1)
BIC(modelo2)
x11()
hist(PM10)
library("goftest")
#funci?n:
Fun<-function(x,n,k){
N=length(x)
medias=rep(0,k)
for (i in 1:k) {
O=order(runif(N))
medias[i]=mean(x[O[1:n]])
}
m=round(mean(medias),4)
s2=round((var(medias)*(k-1)/k*10000)/10000,4)
hist(medias,freq=FALSE,ylab="Densidad",xlab = paste("Promedios con n =",n,"datos"),
main = paste("Media =",m,"\n Varianza =",s2))
curve(exp(-((x-mean(medias))/sd(medias))^2/2)/(sd(medias)*sqrt(2*pi))
,min(medias),max(medias),add=T)
cvm.test(medias,"pnorm",m,s2)
}
#Distribución Logistica:
x<-rlogis(20000,0,1)  #Parámetros 0,1
#funci?n:
Fun<-function(x,n,k){
N=length(x)
medias=rep(0,k)
for (i in 1:k) {
O=order(runif(N))
medias[i]=mean(x[O[1:n]])
}
m=round(mean(medias),4)
s2=round((var(medias)*(k-1)/k*10000)/10000,4)
hist(medias,freq=FALSE,ylab="Densidad",xlab = paste("Promedios con n =",n,"datos"),
main = paste("Media =",m,"\n Varianza =",s2))
curve(exp(-((x-mean(medias))/sd(medias))^2/2)/(sd(medias)*sqrt(2*pi))
,min(medias),max(medias),add=T)
cvm.test(medias,"pnorm",m,s2)
}
#Distribución Logistica:
x<-rlogis(20000,0,1)  #Parámetros 0,1
x11()
par(mfrow=c(2,2))
Fun(x,1,5000)
Fun(x,10,5000)
Fun(x,25,5000)
Fun(x,50,5000)
x1<-rlogis(20000,9,4)  #Par?metros 9,4
x11()
par(mfrow=c(2,2))
Fun(x1,1,5000)
Fun(x1,10,5000)
Fun(x1,25,5000)
Fun(x1,50,5000)
#funci?n:
Fun<-function(x,n,k){
N=length(x)
medias=rep(0,k)
for (i in 1:k) {
O=order(runif(N))
medias[i]=mean(x[O[1:n]])
}
m=round(mean(medias),4)
s2=round((var(medias)*(k-1)/k*10000)/10000,4)
hist(medias,freq=FALSE,ylab="Densidad",xlab = paste("Promedios con n =",n,"datos"),
main = paste("Media =",m,"\n Varianza =",s2))
curve(exp(-((x-mean(medias))/sd(medias))^2/2)/(sd(medias)*sqrt(2*pi))
,min(medias),max(medias),add=T)
cvm.test(medias,"pnorm",mean=m,sd=sqrt(s2))
}
#Distribución Logistica:
x<-rlogis(20000,0,1)  #Parámetros 0,1
Fun(x,1,5000)
Fun(x,10,5000)
Fun(x,25,5000)
Fun(x,50,5000)
x11()
par(mfrow=c(2,2))
Fun(x,1,5000)
Fun(x,10,5000)
Fun(x,25,5000)
Fun(x,50,5000)
x1<-rlogis(20000,9,4)  #Par?metros 9,4
x11()
par(mfrow=c(2,2))
Fun(x1,1,5000)
Fun(x1,10,5000)
Fun(x1,25,5000)
Fun(x1,50,5000)
x2<-rlogis(20000,15,6)  #Par?metros 15,6
x11()
par(mfrow=c(2,2))
Fun(x2,1,5000)
Fun(x2,10,5000)
Fun(x2,25,5000)
Fun(x2,50,5000)
x11()
par(mfrow=c(2,2))
Fun(x2,1,100)
Fun(x2,10,100)
Fun(x2,25,100)
Fun(x2,50,100)
x11()
par(mfrow=c(2,2))
Fun(x2,1,1000)
Fun(x2,10,1000)
Fun(x2,25,1000)
Fun(x2,50,1000)
#Distribuci?n Poisson:
x3<-rpois(20000,1)  #Par?metro lambda=1
x11()
par(mfrow=c(2,2))
Fun(x3,1,5000)
Fun(x3,5,5000)
Fun(x3,10,5000)
Fun(x3,30,5000)
Fun(x3,50,1000)
x5<-rpois(20000,10)  #Par?metros lambda=10
x11()
par(mfrow=c(2,2))
Fun(x5,1,1000)
Fun(x5,10,1000)
Fun(x5,25,1000)
Fun(x5,50,1000)
x4<-rpois(20000,5)  #Par?metros lambda=5
x11()
par(mfrow=c(2,2))
Fun(x4,1,1000)
Fun(x4,10,1000)
Fun(x4,25,1000)
Fun(x4,50,1000)
#Distribución Logistica:
set.seed(1)
x<-rlogis(20000,0,1)  #Parámetros 0,1
x
#Distribución Logistica:
set.seed(1)
x<-rlogis(20000,0,1)  #Parámetros 0,1
x
x11()
par(mfrow=c(2,2))
Fun(x,1,1000)
Fun(x,10,1000)
Fun(x,25,1000)
Fun(x,50,1000)
set.seed(2)
x1<-rlogis(20000,9,4)  #Par?metros 9,4
x11()
par(mfrow=c(2,2))
Fun(x1,1,1000)
Fun(x1,10,1000)
Fun(x1,25,1000)
Fun(x1,50,1000)
set.seed(2)
x1<-rlogis(20000,9,4)  #Par?metros 9,4
x11()
par(mfrow=c(2,2))
Fun(x1,1,1000)
Fun(x1,10,1000)
Fun(x1,25,1000)
Fun(x1,50,1000)
set.seed(3)
x2<-rlogis(20000,15,6)  #Par?metros 15,6
x11()
par(mfrow=c(2,2))
Fun(x2,1,1000)
Fun(x2,10,1000)
Fun(x2,25,1000)
Fun(x2,50,1000)
#Distribuci?n Poisson:
set.seed(4)
x3<-rpois(20000,1)  #Par?metro lambda=1
x11()
par(mfrow=c(2,2))
Fun(x3,1,1000)
Fun(x3,10,1000)
Fun(x3,25,1000)
Fun(x3,50,1000)
set.seed(5)
x4<-rpois(20000,5)  #Par?metros lambda=5
x11()
par(mfrow=c(2,2))
Fun(x4,1,1000)
Fun(x4,10,1000)
Fun(x4,25,1000)
Fun(x4,50,1000)
set.seed(6)
x5<-rpois(20000,10)  #Par?metros lambda=10
x11()
par(mfrow=c(2,2))
Fun(x5,1,1000)
Fun(x5,10,1000)
Fun(x5,25,1000)
Fun(x5,50,1000)
x11()
par(mfrow=c(2,2))
Fun(x3,1,1000)
Fun(x3,10,1000)
Fun(x3,25,1000)
Fun(x3,50,1000)
x11()
par(mfrow=c(2,2))
Fun(x3,1,1000)
Fun(x3,10,1000)
Fun(x3,25,1000)
Fun(x3,50,1000)
#Distribuci?n Poisson:
set.seed(4)
x3<-rpois(20000,1)  #Par?metro lambda=1
x3
x11()
par(mfrow=c(2,2))
Fun(x3,1,1000)
Fun(x3,10,1000)
Fun(x3,25,1000)
Fun(x3,50,1000)
#Distribución Logistica:
set.seed(1)
x<-rlogis(20000,0,1)  #Parámetros 0,1
x11()
par(mfrow=c(2,2))
Fun(x,1,1000)
Fun(x,10,1000)
Fun(x,25,1000)
Fun(x,50,1000)
Fun(x3,1,1000)
Fun(x3,10,1000)
Fun(x3,25,1000)
Fun(x3,50,1000)
Fun(x4,1,1000)
Fun(x4,10,1000)
Fun(x4,25,1000)
Fun(x4,50,1000)
Fun(x5,1,1000)
Fun(x5,10,1000)
Fun(x5,25,1000)
Fun(x5,50,1000)
Fun(x,1,1000)
Fun(x,10,1000)
Fun(x,25,1000)
Fun(x,50,1000)
Fun(x1,1,1000)
Fun(x1,10,1000)
Fun(x1,25,1000)
Fun(x1,50,1000)
Fun(x2,1,1000)
Fun(x2,10,1000)
Fun(x2,25,1000)
Fun(x2,50,1000)
